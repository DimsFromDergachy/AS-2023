@page "/skill/add"
@page "/skill/edit/{SkillId:int}"
@using Microsoft.AspNetCore.Components
@using System.Net.Mime
@using TeamGatherer.Shared.ViewModels
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>@Title Skill</h1>
<hr />

@if (Skill == null || SkillGroups == null)
{
    <p><em>Загрузка...</em></p>
}
else if (SkillGroups.All(gr => gr.IsDeleted.Value))
{
    <p><em>Необходимо добавить группы навыков!</em></p>
}
else
{
    <EditForm Model="@Skill" OnValidSubmit="SaveSkill">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="Name" class="form-label">Имя навыка</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="Skill.Name" />
            </div>
            <ValidationMessage For="@(() => Skill.Name)" />
        </div>

        <div class="mb-3">
            <label for="Name" class="form-label">Группа навыка</label>
            <div class="col-md-4">
                <select class="form-control selectpicker" @bind="Skill.SkillGroupId">
                    @foreach (var skillGroup in SkillGroups.Where(gr => !gr.IsDeleted.Value))
                    {
                        <option value="@skillGroup.Id">@skillGroup.Name</option>
                    }
                </select>
            </div>
        </div>
        <hr />
        
        
        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
            <button class="btn btn-light" @onclick="Cancel">Cancel</button>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public int SkillId { get; set; }

    protected List<SkillGroupViewModel>? SkillGroups;
    protected string Title = "Add";
    protected SkillViewModel Skill;

    protected override async Task OnInitializedAsync()
    {
        SkillGroups = await Http.GetFromJsonAsync<List<SkillGroupViewModel>>("api/SkillGroups/GetSkillGroups");
        if (Skill == null)
        {
            Skill = new() { SkillGroupId = SkillGroups.First().Id, IsDeleted = false };
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        if (SkillId != 0)
        {
            Title = "Edit";
            Skill = await Http.GetFromJsonAsync<SkillViewModel>($"api/Skills/GetSkill?id={SkillId}");  
        }
    }

    protected async Task SaveSkill()
    {
        if (SkillId != 0)
        {
            await Http.PostAsJsonAsync("api/Skills/UpdateSkill", Skill);
        }
        else
        {
            await Http.PostAsJsonAsync("api/Skills/AddSkillToGroup", Skill);
        }
        Cancel();
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/skills");
    }
}