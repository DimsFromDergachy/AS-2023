@page "/skillgroup/add"
@page "/skillgroup/edit/{SkillGroupId:int}"

@using Microsoft.AspNetCore.Components
@using System.Net.Mime
@using TeamGatherer.Shared.ViewModels
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>@Title группу навыков</h1>
<hr />

@if (SkillGroup == null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <EditForm Model="@SkillGroup" OnValidSubmit="SaveGroup">
        <DataAnnotationsValidator />
        <div class="mb-3">
            <label for="Name" class="form-label">Имя группы</label>
            <div class="col-md-4">
                <InputText class="form-control" @bind-Value="SkillGroup.Name" />
            </div>
            <ValidationMessage For="@(() => SkillGroup.Name)" />
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Save</button>
            <button class="btn btn-light" @onclick="Cancel">Cancel</button>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public int SkillGroupId { get; set; }

    protected string Title = "Добавить";
    protected SkillGroupViewModel SkillGroup = new();

    protected override async Task OnParametersSetAsync()
    {
        if (SkillGroupId != 0)
        {
            Title = "Редактировать";
            SkillGroup = await Http.GetFromJsonAsync<SkillGroupViewModel>($"api/SkillGroups/GetSkillGroup?id={SkillGroupId}");  
        }
    }

    protected async Task SaveGroup()
    {
        if (SkillGroupId != 0)
        {

            await Http.PostAsJsonAsync("api/SkillGroups/UpdateGroup", SkillGroup);
        }
        else
        {
            await Http.PostAsJsonAsync("api/SkillGroups/AddGroup", SkillGroup);
        }
        Cancel();
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/skillgroups");
    }
}